
STM32-Library-Development.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000694  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000828  08000830  00010830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000828  08000828  00010830  2**0
                  CONTENTS
  4 .ARM          00000000  08000828  08000828  00010830  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000828  08000830  00010830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000828  08000828  00010828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800082c  0800082c  0001082c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000830  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000830  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010830  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008de  00000000  00000000  00010860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000022e  00000000  00000000  0001113e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b0  00000000  00000000  00011370  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000088  00000000  00000000  00011420  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001622  00000000  00000000  000114a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c73  00000000  00000000  00012aca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005f6a  00000000  00000000  0001373d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000196a7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001fc  00000000  00000000  000196fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000810 	.word	0x08000810

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000810 	.word	0x08000810

080001d4 <GPIO_PeriClockControl>:
#define SRC_GPIO_C_

#include "gpio.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d136      	bne.n	8000254 <GPIO_PeriClockControl+0x80>
    {
        if(pGPIOx == GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a38      	ldr	r2, [pc, #224]	; (80002cc <GPIO_PeriClockControl+0xf8>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d106      	bne.n	80001fc <GPIO_PeriClockControl+0x28>
        {
            GPIOA_PCLK_EN();
 80001ee:	4b38      	ldr	r3, [pc, #224]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f2:	4a37      	ldr	r2, [pc, #220]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6313      	str	r3, [r2, #48]	; 0x30
        else if(pGPIOx == GPIOE)
        {
            GPIOE_PCLK_DI();
        }
    }
}
 80001fa:	e061      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOB)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a35      	ldr	r2, [pc, #212]	; (80002d4 <GPIO_PeriClockControl+0x100>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 8000204:	4b32      	ldr	r3, [pc, #200]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a31      	ldr	r2, [pc, #196]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800020a:	f043 0302 	orr.w	r3, r3, #2
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000210:	e056      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOC)
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a30      	ldr	r2, [pc, #192]	; (80002d8 <GPIO_PeriClockControl+0x104>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 800021a:	4b2d      	ldr	r3, [pc, #180]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800021c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021e:	4a2c      	ldr	r2, [pc, #176]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000220:	f043 0304 	orr.w	r3, r3, #4
 8000224:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000226:	e04b      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOD)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a2c      	ldr	r2, [pc, #176]	; (80002dc <GPIO_PeriClockControl+0x108>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 8000230:	4b27      	ldr	r3, [pc, #156]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a26      	ldr	r2, [pc, #152]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000236:	f043 0308 	orr.w	r3, r3, #8
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023c:	e040      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOE)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a27      	ldr	r2, [pc, #156]	; (80002e0 <GPIO_PeriClockControl+0x10c>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d13c      	bne.n	80002c0 <GPIO_PeriClockControl+0xec>
            GPIOE_PCLK_EN();
 8000246:	4b22      	ldr	r3, [pc, #136]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024a:	4a21      	ldr	r2, [pc, #132]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800024c:	f043 0310 	orr.w	r3, r3, #16
 8000250:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000252:	e035      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        if(pGPIOx == GPIOA)
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a1d      	ldr	r2, [pc, #116]	; (80002cc <GPIO_PeriClockControl+0xf8>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d106      	bne.n	800026a <GPIO_PeriClockControl+0x96>
            GPIOA_PCLK_DI();
 800025c:	4b1c      	ldr	r3, [pc, #112]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a1b      	ldr	r2, [pc, #108]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000262:	f023 0301 	bic.w	r3, r3, #1
 8000266:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000268:	e02a      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOB)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a19      	ldr	r2, [pc, #100]	; (80002d4 <GPIO_PeriClockControl+0x100>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0xac>
            GPIOB_PCLK_DI();
 8000272:	4b17      	ldr	r3, [pc, #92]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000276:	4a16      	ldr	r2, [pc, #88]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000278:	f023 0302 	bic.w	r3, r3, #2
 800027c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027e:	e01f      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOC)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a15      	ldr	r2, [pc, #84]	; (80002d8 <GPIO_PeriClockControl+0x104>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0xc2>
            GPIOC_PCLK_DI();
 8000288:	4b11      	ldr	r3, [pc, #68]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a10      	ldr	r2, [pc, #64]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800028e:	f023 0304 	bic.w	r3, r3, #4
 8000292:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000294:	e014      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOD)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a10      	ldr	r2, [pc, #64]	; (80002dc <GPIO_PeriClockControl+0x108>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0xd8>
            GPIOD_PCLK_DI();
 800029e:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a0b      	ldr	r2, [pc, #44]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002a4:	f023 0308 	bic.w	r3, r3, #8
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002aa:	e009      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOE)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a0c      	ldr	r2, [pc, #48]	; (80002e0 <GPIO_PeriClockControl+0x10c>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d105      	bne.n	80002c0 <GPIO_PeriClockControl+0xec>
            GPIOE_PCLK_DI();
 80002b4:	4b06      	ldr	r3, [pc, #24]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002ba:	f023 0310 	bic.w	r3, r3, #16
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	bf00      	nop
 80002c2:	370c      	adds	r7, #12
 80002c4:	46bd      	mov	sp, r7
 80002c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ca:	4770      	bx	lr
 80002cc:	40020000 	.word	0x40020000
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020400 	.word	0x40020400
 80002d8:	40020800 	.word	0x40020800
 80002dc:	40020c00 	.word	0x40020c00
 80002e0:	40021000 	.word	0x40021000

080002e4 <ConvertPortToCodeEXTI>:
uint8_t ConvertPortToCodeEXTI(GPIO_RegDef_t *pGPIOx){
 80002e4:	b480      	push	{r7}
 80002e6:	b083      	sub	sp, #12
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
	if(pGPIOx == GPIOA){
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a11      	ldr	r2, [pc, #68]	; (8000334 <ConvertPortToCodeEXTI+0x50>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d101      	bne.n	80002f8 <ConvertPortToCodeEXTI+0x14>
		return 0;
 80002f4:	2300      	movs	r3, #0
 80002f6:	e017      	b.n	8000328 <ConvertPortToCodeEXTI+0x44>
	}
	else if(pGPIOx == GPIOB){
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a0f      	ldr	r2, [pc, #60]	; (8000338 <ConvertPortToCodeEXTI+0x54>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d101      	bne.n	8000304 <ConvertPortToCodeEXTI+0x20>
		return 1;
 8000300:	2301      	movs	r3, #1
 8000302:	e011      	b.n	8000328 <ConvertPortToCodeEXTI+0x44>
	}else if(pGPIOx == GPIOC){
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a0d      	ldr	r2, [pc, #52]	; (800033c <ConvertPortToCodeEXTI+0x58>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d101      	bne.n	8000310 <ConvertPortToCodeEXTI+0x2c>
		return 2;
 800030c:	2302      	movs	r3, #2
 800030e:	e00b      	b.n	8000328 <ConvertPortToCodeEXTI+0x44>
	}else if(pGPIOx == GPIOD){
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a0b      	ldr	r2, [pc, #44]	; (8000340 <ConvertPortToCodeEXTI+0x5c>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d101      	bne.n	800031c <ConvertPortToCodeEXTI+0x38>
		return 3;
 8000318:	2303      	movs	r3, #3
 800031a:	e005      	b.n	8000328 <ConvertPortToCodeEXTI+0x44>
	}else if(pGPIOx == GPIOE){
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a09      	ldr	r2, [pc, #36]	; (8000344 <ConvertPortToCodeEXTI+0x60>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d101      	bne.n	8000328 <ConvertPortToCodeEXTI+0x44>
		return 4;
 8000324:	2304      	movs	r3, #4
 8000326:	e7ff      	b.n	8000328 <ConvertPortToCodeEXTI+0x44>
	}
}
 8000328:	4618      	mov	r0, r3
 800032a:	370c      	adds	r7, #12
 800032c:	46bd      	mov	sp, r7
 800032e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000332:	4770      	bx	lr
 8000334:	40020000 	.word	0x40020000
 8000338:	40020400 	.word	0x40020400
 800033c:	40020800 	.word	0x40020800
 8000340:	40020c00 	.word	0x40020c00
 8000344:	40021000 	.word	0x40021000

08000348 <GPIO_Init>:
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000348:	b580      	push	{r7, lr}
 800034a:	b084      	sub	sp, #16
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000350:	2300      	movs	r3, #0
 8000352:	60fb      	str	r3, [r7, #12]
	//1. config mode of gpio pin

	GPIO_PeriClockControl(pGPIOHandle ->pGPIOx, ENABLE);
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	2101      	movs	r1, #1
 800035a:	4618      	mov	r0, r3
 800035c:	f7ff ff3a 	bl	80001d4 <GPIO_PeriClockControl>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){ //not interupt mode
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	795b      	ldrb	r3, [r3, #5]
 8000364:	2b03      	cmp	r3, #3
 8000366:	d824      	bhi.n	80003b2 <GPIO_Init+0x6a>
		temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	795b      	ldrb	r3, [r3, #5]
 800036c:	461a      	mov	r2, r3
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	791b      	ldrb	r3, [r3, #4]
 8000372:	005b      	lsls	r3, r3, #1
 8000374:	fa02 f303 	lsl.w	r3, r2, r3
 8000378:	461a      	mov	r2, r3
 800037a:	68fb      	ldr	r3, [r7, #12]
 800037c:	4313      	orrs	r3, r2
 800037e:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	681a      	ldr	r2, [r3, #0]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	791b      	ldrb	r3, [r3, #4]
 800038a:	4619      	mov	r1, r3
 800038c:	2303      	movs	r3, #3
 800038e:	408b      	lsls	r3, r1
 8000390:	43db      	mvns	r3, r3
 8000392:	4619      	mov	r1, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	400a      	ands	r2, r1
 800039a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6819      	ldr	r1, [r3, #0]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	68fa      	ldr	r2, [r7, #12]
 80003a8:	430a      	orrs	r2, r1
 80003aa:	601a      	str	r2, [r3, #0]
		temp = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]
 80003b0:	e093      	b.n	80004da <GPIO_Init+0x192>
	}
	else{ //interupt mode, code later. Focus on SYSCFG register (Chapter 7) , then go to EXTI register (chapter 10) to config Rising edge or falling edge
		//1. Config FTRS
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	795b      	ldrb	r3, [r3, #5]
 80003b6:	2b04      	cmp	r3, #4
 80003b8:	d117      	bne.n	80003ea <GPIO_Init+0xa2>

			 EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //RESET
 80003ba:	4b92      	ldr	r3, [pc, #584]	; (8000604 <GPIO_Init+0x2bc>)
 80003bc:	68db      	ldr	r3, [r3, #12]
 80003be:	687a      	ldr	r2, [r7, #4]
 80003c0:	7912      	ldrb	r2, [r2, #4]
 80003c2:	4611      	mov	r1, r2
 80003c4:	2201      	movs	r2, #1
 80003c6:	408a      	lsls	r2, r1
 80003c8:	43d2      	mvns	r2, r2
 80003ca:	4611      	mov	r1, r2
 80003cc:	4a8d      	ldr	r2, [pc, #564]	; (8000604 <GPIO_Init+0x2bc>)
 80003ce:	400b      	ands	r3, r1
 80003d0:	60d3      	str	r3, [r2, #12]
			 EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d2:	4b8c      	ldr	r3, [pc, #560]	; (8000604 <GPIO_Init+0x2bc>)
 80003d4:	68db      	ldr	r3, [r3, #12]
 80003d6:	687a      	ldr	r2, [r7, #4]
 80003d8:	7912      	ldrb	r2, [r2, #4]
 80003da:	4611      	mov	r1, r2
 80003dc:	2201      	movs	r2, #1
 80003de:	408a      	lsls	r2, r1
 80003e0:	4611      	mov	r1, r2
 80003e2:	4a88      	ldr	r2, [pc, #544]	; (8000604 <GPIO_Init+0x2bc>)
 80003e4:	430b      	orrs	r3, r1
 80003e6:	60d3      	str	r3, [r2, #12]
 80003e8:	e04c      	b.n	8000484 <GPIO_Init+0x13c>

		}
		//1. Config RTRS
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	795b      	ldrb	r3, [r3, #5]
 80003ee:	2b05      	cmp	r3, #5
 80003f0:	d117      	bne.n	8000422 <GPIO_Init+0xda>
			 EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //RESET
 80003f2:	4b84      	ldr	r3, [pc, #528]	; (8000604 <GPIO_Init+0x2bc>)
 80003f4:	689b      	ldr	r3, [r3, #8]
 80003f6:	687a      	ldr	r2, [r7, #4]
 80003f8:	7912      	ldrb	r2, [r2, #4]
 80003fa:	4611      	mov	r1, r2
 80003fc:	2201      	movs	r2, #1
 80003fe:	408a      	lsls	r2, r1
 8000400:	43d2      	mvns	r2, r2
 8000402:	4611      	mov	r1, r2
 8000404:	4a7f      	ldr	r2, [pc, #508]	; (8000604 <GPIO_Init+0x2bc>)
 8000406:	400b      	ands	r3, r1
 8000408:	6093      	str	r3, [r2, #8]
			 EXTI->RTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800040a:	4b7e      	ldr	r3, [pc, #504]	; (8000604 <GPIO_Init+0x2bc>)
 800040c:	689b      	ldr	r3, [r3, #8]
 800040e:	687a      	ldr	r2, [r7, #4]
 8000410:	7912      	ldrb	r2, [r2, #4]
 8000412:	4611      	mov	r1, r2
 8000414:	2201      	movs	r2, #1
 8000416:	408a      	lsls	r2, r1
 8000418:	4611      	mov	r1, r2
 800041a:	4a7a      	ldr	r2, [pc, #488]	; (8000604 <GPIO_Init+0x2bc>)
 800041c:	430b      	orrs	r3, r1
 800041e:	6093      	str	r3, [r2, #8]
 8000420:	e030      	b.n	8000484 <GPIO_Init+0x13c>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT){
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	795b      	ldrb	r3, [r3, #5]
 8000426:	2b06      	cmp	r3, #6
 8000428:	d12c      	bne.n	8000484 <GPIO_Init+0x13c>
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042a:	4b76      	ldr	r3, [pc, #472]	; (8000604 <GPIO_Init+0x2bc>)
 800042c:	68db      	ldr	r3, [r3, #12]
 800042e:	687a      	ldr	r2, [r7, #4]
 8000430:	7912      	ldrb	r2, [r2, #4]
 8000432:	4611      	mov	r1, r2
 8000434:	2201      	movs	r2, #1
 8000436:	408a      	lsls	r2, r1
 8000438:	43d2      	mvns	r2, r2
 800043a:	4611      	mov	r1, r2
 800043c:	4a71      	ldr	r2, [pc, #452]	; (8000604 <GPIO_Init+0x2bc>)
 800043e:	400b      	ands	r3, r1
 8000440:	60d3      	str	r3, [r2, #12]
			EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000442:	4b70      	ldr	r3, [pc, #448]	; (8000604 <GPIO_Init+0x2bc>)
 8000444:	68db      	ldr	r3, [r3, #12]
 8000446:	687a      	ldr	r2, [r7, #4]
 8000448:	7912      	ldrb	r2, [r2, #4]
 800044a:	4611      	mov	r1, r2
 800044c:	2201      	movs	r2, #1
 800044e:	408a      	lsls	r2, r1
 8000450:	4611      	mov	r1, r2
 8000452:	4a6c      	ldr	r2, [pc, #432]	; (8000604 <GPIO_Init+0x2bc>)
 8000454:	430b      	orrs	r3, r1
 8000456:	60d3      	str	r3, [r2, #12]
			EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000458:	4b6a      	ldr	r3, [pc, #424]	; (8000604 <GPIO_Init+0x2bc>)
 800045a:	68db      	ldr	r3, [r3, #12]
 800045c:	687a      	ldr	r2, [r7, #4]
 800045e:	7912      	ldrb	r2, [r2, #4]
 8000460:	4611      	mov	r1, r2
 8000462:	2201      	movs	r2, #1
 8000464:	408a      	lsls	r2, r1
 8000466:	4611      	mov	r1, r2
 8000468:	4a66      	ldr	r2, [pc, #408]	; (8000604 <GPIO_Init+0x2bc>)
 800046a:	430b      	orrs	r3, r1
 800046c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800046e:	4b65      	ldr	r3, [pc, #404]	; (8000604 <GPIO_Init+0x2bc>)
 8000470:	689b      	ldr	r3, [r3, #8]
 8000472:	687a      	ldr	r2, [r7, #4]
 8000474:	7912      	ldrb	r2, [r2, #4]
 8000476:	4611      	mov	r1, r2
 8000478:	2201      	movs	r2, #1
 800047a:	408a      	lsls	r2, r1
 800047c:	4611      	mov	r1, r2
 800047e:	4a61      	ldr	r2, [pc, #388]	; (8000604 <GPIO_Init+0x2bc>)
 8000480:	430b      	orrs	r3, r1
 8000482:	6093      	str	r3, [r2, #8]
//	    case 3:
//	    	SYSCFG->EXTICR[3] |= (ConvertPortToCodeEXTI(pGPIOHandle->pGPIOx) << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) * 4);
//	    	break;
//
//	    }
		uint8_t chooseEXTIReg = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4; // choose which EXTICR register is used 0,1,2,3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	089b      	lsrs	r3, r3, #2
 800048a:	72fb      	strb	r3, [r7, #11]
		uint8_t chooseEXTILine = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	f003 0303 	and.w	r3, r3, #3
 8000494:	72bb      	strb	r3, [r7, #10]

	    SYSCFG->EXTICR[chooseEXTIReg] |= (ConvertPortToCodeEXTI(pGPIOHandle->pGPIOx) << chooseEXTILine * 4);
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	4618      	mov	r0, r3
 800049c:	f7ff ff22 	bl	80002e4 <ConvertPortToCodeEXTI>
 80004a0:	4603      	mov	r3, r0
 80004a2:	461a      	mov	r2, r3
 80004a4:	7abb      	ldrb	r3, [r7, #10]
 80004a6:	009b      	lsls	r3, r3, #2
 80004a8:	fa02 f103 	lsl.w	r1, r2, r3
 80004ac:	4a56      	ldr	r2, [pc, #344]	; (8000608 <GPIO_Init+0x2c0>)
 80004ae:	7afb      	ldrb	r3, [r7, #11]
 80004b0:	3302      	adds	r3, #2
 80004b2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004b6:	4608      	mov	r0, r1
 80004b8:	4953      	ldr	r1, [pc, #332]	; (8000608 <GPIO_Init+0x2c0>)
 80004ba:	7afb      	ldrb	r3, [r7, #11]
 80004bc:	4302      	orrs	r2, r0
 80004be:	3302      	adds	r3, #2
 80004c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		//3. enable interupt using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c4:	4b4f      	ldr	r3, [pc, #316]	; (8000604 <GPIO_Init+0x2bc>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	687a      	ldr	r2, [r7, #4]
 80004ca:	7912      	ldrb	r2, [r2, #4]
 80004cc:	4611      	mov	r1, r2
 80004ce:	2201      	movs	r2, #1
 80004d0:	408a      	lsls	r2, r1
 80004d2:	4611      	mov	r1, r2
 80004d4:	4a4b      	ldr	r2, [pc, #300]	; (8000604 <GPIO_Init+0x2bc>)
 80004d6:	430b      	orrs	r3, r1
 80004d8:	6013      	str	r3, [r2, #0]

	}

	//2. config the speed
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	799b      	ldrb	r3, [r3, #6]
 80004de:	461a      	mov	r2, r3
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	791b      	ldrb	r3, [r3, #4]
 80004e4:	005b      	lsls	r3, r3, #1
 80004e6:	fa02 f303 	lsl.w	r3, r2, r3
 80004ea:	461a      	mov	r2, r3
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	4313      	orrs	r3, r2
 80004f0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	689a      	ldr	r2, [r3, #8]
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	4619      	mov	r1, r3
 80004fe:	2303      	movs	r3, #3
 8000500:	408b      	lsls	r3, r1
 8000502:	43db      	mvns	r3, r3
 8000504:	4619      	mov	r1, r3
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	400a      	ands	r2, r1
 800050c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	6899      	ldr	r1, [r3, #8]
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	68fa      	ldr	r2, [r7, #12]
 800051a:	430a      	orrs	r2, r1
 800051c:	609a      	str	r2, [r3, #8]
	temp = 0;
 800051e:	2300      	movs	r3, #0
 8000520:	60fb      	str	r3, [r7, #12]

	//3. config pudp setting
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	79db      	ldrb	r3, [r3, #7]
 8000526:	461a      	mov	r2, r3
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	791b      	ldrb	r3, [r3, #4]
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	fa02 f303 	lsl.w	r3, r2, r3
 8000532:	461a      	mov	r2, r3
 8000534:	68fb      	ldr	r3, [r7, #12]
 8000536:	4313      	orrs	r3, r2
 8000538:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	68da      	ldr	r2, [r3, #12]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	4619      	mov	r1, r3
 8000546:	2303      	movs	r3, #3
 8000548:	408b      	lsls	r3, r1
 800054a:	43db      	mvns	r3, r3
 800054c:	4619      	mov	r1, r3
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	400a      	ands	r2, r1
 8000554:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	68d9      	ldr	r1, [r3, #12]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	68fa      	ldr	r2, [r7, #12]
 8000562:	430a      	orrs	r2, r1
 8000564:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000566:	2300      	movs	r3, #0
 8000568:	60fb      	str	r3, [r7, #12]

	//4. config outputtype
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	7a1b      	ldrb	r3, [r3, #8]
 800056e:	461a      	mov	r2, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	791b      	ldrb	r3, [r3, #4]
 8000574:	005b      	lsls	r3, r3, #1
 8000576:	fa02 f303 	lsl.w	r3, r2, r3
 800057a:	461a      	mov	r2, r3
 800057c:	68fb      	ldr	r3, [r7, #12]
 800057e:	4313      	orrs	r3, r2
 8000580:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->ODR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	695a      	ldr	r2, [r3, #20]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	4619      	mov	r1, r3
 800058e:	2303      	movs	r3, #3
 8000590:	408b      	lsls	r3, r1
 8000592:	43db      	mvns	r3, r3
 8000594:	4619      	mov	r1, r3
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	400a      	ands	r2, r1
 800059c:	615a      	str	r2, [r3, #20]
	pGPIOHandle->pGPIOx->ODR |= temp;
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	6959      	ldr	r1, [r3, #20]
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	68fa      	ldr	r2, [r7, #12]
 80005aa:	430a      	orrs	r2, r1
 80005ac:	615a      	str	r2, [r3, #20]
	temp = 0;
 80005ae:	2300      	movs	r3, #0
 80005b0:	60fb      	str	r3, [r7, #12]

	//5. config alternate function
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	795b      	ldrb	r3, [r3, #5]
 80005b6:	2b02      	cmp	r3, #2
 80005b8:	d149      	bne.n	800064e <GPIO_Init+0x306>
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber < 8){
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	791b      	ldrb	r3, [r3, #4]
 80005be:	2b07      	cmp	r3, #7
 80005c0:	d824      	bhi.n	800060c <GPIO_Init+0x2c4>
			pGPIOHandle->pGPIOx->AFR[0] &= ~(0xF << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 4));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	6a1a      	ldr	r2, [r3, #32]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	009b      	lsls	r3, r3, #2
 80005ce:	210f      	movs	r1, #15
 80005d0:	fa01 f303 	lsl.w	r3, r1, r3
 80005d4:	43db      	mvns	r3, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	400a      	ands	r2, r1
 80005de:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[0] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6a1a      	ldr	r2, [r3, #32]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	7a5b      	ldrb	r3, [r3, #9]
 80005ea:	4619      	mov	r1, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	791b      	ldrb	r3, [r3, #4]
 80005f0:	009b      	lsls	r3, r3, #2
 80005f2:	fa01 f303 	lsl.w	r3, r1, r3
 80005f6:	4619      	mov	r1, r3
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	430a      	orrs	r2, r1
 80005fe:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));

		}
	}

}
 8000600:	e025      	b.n	800064e <GPIO_Init+0x306>
 8000602:	bf00      	nop
 8000604:	40013c00 	.word	0x40013c00
 8000608:	40013800 	.word	0x40013800
			pGPIOHandle->pGPIOx->AFR[1]	&= ~(0xF << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8) * 4);
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	3b08      	subs	r3, #8
 8000618:	009b      	lsls	r3, r3, #2
 800061a:	210f      	movs	r1, #15
 800061c:	fa01 f303 	lsl.w	r3, r1, r3
 8000620:	43db      	mvns	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	400a      	ands	r2, r1
 800062a:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFR[1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	7a5b      	ldrb	r3, [r3, #9]
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	791b      	ldrb	r3, [r3, #4]
 800063c:	3b08      	subs	r3, #8
 800063e:	009b      	lsls	r3, r3, #2
 8000640:	fa01 f303 	lsl.w	r3, r1, r3
 8000644:	4619      	mov	r1, r3
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	430a      	orrs	r2, r1
 800064c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800064e:	bf00      	nop
 8000650:	3710      	adds	r7, #16
 8000652:	46bd      	mov	sp, r7
 8000654:	bd80      	pop	{r7, pc}
 8000656:	bf00      	nop

08000658 <GPIO_ReadFromInputPin>:
}

/*
 * Data read and write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000658:	b480      	push	{r7}
 800065a:	b085      	sub	sp, #20
 800065c:	af00      	add	r7, sp, #0
 800065e:	6078      	str	r0, [r7, #4]
 8000660:	460b      	mov	r3, r1
 8000662:	70fb      	strb	r3, [r7, #3]
	uint8_t value = 0;
 8000664:	2300      	movs	r3, #0
 8000666:	73fb      	strb	r3, [r7, #15]
	value =(uint8_t)((pGPIOx->IDR >> PinNumber) & 0x1);
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	691a      	ldr	r2, [r3, #16]
 800066c:	78fb      	ldrb	r3, [r7, #3]
 800066e:	fa22 f303 	lsr.w	r3, r2, r3
 8000672:	b2db      	uxtb	r3, r3
 8000674:	f003 0301 	and.w	r3, r3, #1
 8000678:	73fb      	strb	r3, [r7, #15]
	return value;
 800067a:	7bfb      	ldrb	r3, [r7, #15]
}
 800067c:	4618      	mov	r0, r3
 800067e:	3714      	adds	r7, #20
 8000680:	46bd      	mov	sp, r7
 8000682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000686:	4770      	bx	lr

08000688 <GPIO_ToggleOutputPin>:
	}
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000688:	b480      	push	{r7}
 800068a:	b083      	sub	sp, #12
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	460b      	mov	r3, r1
 8000692:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	695b      	ldr	r3, [r3, #20]
 8000698:	78fa      	ldrb	r2, [r7, #3]
 800069a:	2101      	movs	r1, #1
 800069c:	fa01 f202 	lsl.w	r2, r1, r2
 80006a0:	405a      	eors	r2, r3
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	615a      	str	r2, [r3, #20]
}
 80006a6:	bf00      	nop
 80006a8:	370c      	adds	r7, #12
 80006aa:	46bd      	mov	sp, r7
 80006ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006b0:	4770      	bx	lr
	...

080006b4 <delay>:
#include <stdint.h>
#include "stm32f401xx.h"
#include "gpio.h"

void delay(void)
{
 80006b4:	b480      	push	{r7}
 80006b6:	b083      	sub	sp, #12
 80006b8:	af00      	add	r7, sp, #0
    for(uint32_t i = 0; i < 500000; i++);
 80006ba:	2300      	movs	r3, #0
 80006bc:	607b      	str	r3, [r7, #4]
 80006be:	e002      	b.n	80006c6 <delay+0x12>
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	3301      	adds	r3, #1
 80006c4:	607b      	str	r3, [r7, #4]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	4a04      	ldr	r2, [pc, #16]	; (80006dc <delay+0x28>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d9f8      	bls.n	80006c0 <delay+0xc>
}
 80006ce:	bf00      	nop
 80006d0:	bf00      	nop
 80006d2:	370c      	adds	r7, #12
 80006d4:	46bd      	mov	sp, r7
 80006d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006da:	4770      	bx	lr
 80006dc:	0007a11f 	.word	0x0007a11f

080006e0 <main>:
int main(void)
{
 80006e0:	b580      	push	{r7, lr}
 80006e2:	b08a      	sub	sp, #40	; 0x28
 80006e4:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed1, GpioLed2, GpioButton1;

	// Cấu hình PA5
	GpioLed1.pGPIOx = GPIOA;
 80006e6:	4b22      	ldr	r3, [pc, #136]	; (8000770 <main+0x90>)
 80006e8:	61fb      	str	r3, [r7, #28]
	GpioLed1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80006ea:	2305      	movs	r3, #5
 80006ec:	f887 3020 	strb.w	r3, [r7, #32]
	GpioLed1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80006f0:	2301      	movs	r3, #1
 80006f2:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	GpioLed1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80006f6:	2302      	movs	r3, #2
 80006f8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	GpioLed1.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80006fc:	2300      	movs	r3, #0
 80006fe:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GpioLed1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000702:	2300      	movs	r3, #0
 8000704:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	GPIO_Init(&GpioLed1);
 8000708:	f107 031c 	add.w	r3, r7, #28
 800070c:	4618      	mov	r0, r3
 800070e:	f7ff fe1b 	bl	8000348 <GPIO_Init>

	// Cấu hình PA6
	GpioLed2.pGPIOx = GPIOA;
 8000712:	4b17      	ldr	r3, [pc, #92]	; (8000770 <main+0x90>)
 8000714:	613b      	str	r3, [r7, #16]
	GpioLed2.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 8000716:	2306      	movs	r3, #6
 8000718:	753b      	strb	r3, [r7, #20]
	GpioLed2.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800071a:	2301      	movs	r3, #1
 800071c:	757b      	strb	r3, [r7, #21]
	GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800071e:	2302      	movs	r3, #2
 8000720:	75bb      	strb	r3, [r7, #22]
	GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000722:	2300      	movs	r3, #0
 8000724:	763b      	strb	r3, [r7, #24]
	GpioLed2.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000726:	2300      	movs	r3, #0
 8000728:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(&GpioLed2);
 800072a:	f107 0310 	add.w	r3, r7, #16
 800072e:	4618      	mov	r0, r3
 8000730:	f7ff fe0a 	bl	8000348 <GPIO_Init>

    GpioButton1.pGPIOx = GPIOA;
 8000734:	4b0e      	ldr	r3, [pc, #56]	; (8000770 <main+0x90>)
 8000736:	607b      	str	r3, [r7, #4]
    GpioButton1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 8000738:	2308      	movs	r3, #8
 800073a:	723b      	strb	r3, [r7, #8]
    GpioButton1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800073c:	2300      	movs	r3, #0
 800073e:	727b      	strb	r3, [r7, #9]
	//GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	//GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
    GpioButton1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000740:	2301      	movs	r3, #1
 8000742:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(&GpioButton1);
 8000744:	1d3b      	adds	r3, r7, #4
 8000746:	4618      	mov	r0, r3
 8000748:	f7ff fdfe 	bl	8000348 <GPIO_Init>

	while(1){

	    if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_8) == 0) {  // Nếu nút được nhấn
 800074c:	2108      	movs	r1, #8
 800074e:	4808      	ldr	r0, [pc, #32]	; (8000770 <main+0x90>)
 8000750:	f7ff ff82 	bl	8000658 <GPIO_ReadFromInputPin>
 8000754:	4603      	mov	r3, r0
 8000756:	2b00      	cmp	r3, #0
 8000758:	d1f8      	bne.n	800074c <main+0x6c>
	        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800075a:	2105      	movs	r1, #5
 800075c:	4804      	ldr	r0, [pc, #16]	; (8000770 <main+0x90>)
 800075e:	f7ff ff93 	bl	8000688 <GPIO_ToggleOutputPin>
	        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_6);
 8000762:	2106      	movs	r1, #6
 8000764:	4802      	ldr	r0, [pc, #8]	; (8000770 <main+0x90>)
 8000766:	f7ff ff8f 	bl	8000688 <GPIO_ToggleOutputPin>
	        delay();
 800076a:	f7ff ffa3 	bl	80006b4 <delay>
	    if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_8) == 0) {  // Nếu nút được nhấn
 800076e:	e7ed      	b.n	800074c <main+0x6c>
 8000770:	40020000 	.word	0x40020000

08000774 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000774:	480d      	ldr	r0, [pc, #52]	; (80007ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000776:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000778:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800077c:	480c      	ldr	r0, [pc, #48]	; (80007b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800077e:	490d      	ldr	r1, [pc, #52]	; (80007b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000780:	4a0d      	ldr	r2, [pc, #52]	; (80007b8 <LoopForever+0xe>)
  movs r3, #0
 8000782:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000784:	e002      	b.n	800078c <LoopCopyDataInit>

08000786 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000786:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000788:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800078a:	3304      	adds	r3, #4

0800078c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800078c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800078e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000790:	d3f9      	bcc.n	8000786 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000792:	4a0a      	ldr	r2, [pc, #40]	; (80007bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000794:	4c0a      	ldr	r4, [pc, #40]	; (80007c0 <LoopForever+0x16>)
  movs r3, #0
 8000796:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000798:	e001      	b.n	800079e <LoopFillZerobss>

0800079a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800079a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800079c:	3204      	adds	r2, #4

0800079e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800079e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007a0:	d3fb      	bcc.n	800079a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007a2:	f000 f811 	bl	80007c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007a6:	f7ff ff9b 	bl	80006e0 <main>

080007aa <LoopForever>:

LoopForever:
    b LoopForever
 80007aa:	e7fe      	b.n	80007aa <LoopForever>
  ldr   r0, =_estack
 80007ac:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80007b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007b4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007b8:	08000830 	.word	0x08000830
  ldr r2, =_sbss
 80007bc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007c0:	2000001c 	.word	0x2000001c

080007c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007c4:	e7fe      	b.n	80007c4 <ADC_IRQHandler>
	...

080007c8 <__libc_init_array>:
 80007c8:	b570      	push	{r4, r5, r6, lr}
 80007ca:	4d0d      	ldr	r5, [pc, #52]	; (8000800 <__libc_init_array+0x38>)
 80007cc:	4c0d      	ldr	r4, [pc, #52]	; (8000804 <__libc_init_array+0x3c>)
 80007ce:	1b64      	subs	r4, r4, r5
 80007d0:	10a4      	asrs	r4, r4, #2
 80007d2:	2600      	movs	r6, #0
 80007d4:	42a6      	cmp	r6, r4
 80007d6:	d109      	bne.n	80007ec <__libc_init_array+0x24>
 80007d8:	4d0b      	ldr	r5, [pc, #44]	; (8000808 <__libc_init_array+0x40>)
 80007da:	4c0c      	ldr	r4, [pc, #48]	; (800080c <__libc_init_array+0x44>)
 80007dc:	f000 f818 	bl	8000810 <_init>
 80007e0:	1b64      	subs	r4, r4, r5
 80007e2:	10a4      	asrs	r4, r4, #2
 80007e4:	2600      	movs	r6, #0
 80007e6:	42a6      	cmp	r6, r4
 80007e8:	d105      	bne.n	80007f6 <__libc_init_array+0x2e>
 80007ea:	bd70      	pop	{r4, r5, r6, pc}
 80007ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f0:	4798      	blx	r3
 80007f2:	3601      	adds	r6, #1
 80007f4:	e7ee      	b.n	80007d4 <__libc_init_array+0xc>
 80007f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007fa:	4798      	blx	r3
 80007fc:	3601      	adds	r6, #1
 80007fe:	e7f2      	b.n	80007e6 <__libc_init_array+0x1e>
 8000800:	08000828 	.word	0x08000828
 8000804:	08000828 	.word	0x08000828
 8000808:	08000828 	.word	0x08000828
 800080c:	0800082c 	.word	0x0800082c

08000810 <_init>:
 8000810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000812:	bf00      	nop
 8000814:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000816:	bc08      	pop	{r3}
 8000818:	469e      	mov	lr, r3
 800081a:	4770      	bx	lr

0800081c <_fini>:
 800081c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081e:	bf00      	nop
 8000820:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000822:	bc08      	pop	{r3}
 8000824:	469e      	mov	lr, r3
 8000826:	4770      	bx	lr
