
STM32-Library-Development.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f8  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800068c  08000694  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800068c  0800068c  00010694  2**0
                  CONTENTS
  4 .ARM          00000000  0800068c  0800068c  00010694  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800068c  08000694  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800068c  0800068c  0001068c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000690  08000690  00010690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000694  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000694  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010694  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007ca  00000000  00000000  000106c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000225  00000000  00000000  00010e8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  000110b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00011160  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001622  00000000  00000000  000111e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000baf  00000000  00000000  00012802  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005ef5  00000000  00000000  000133b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000192a6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d0  00000000  00000000  000192fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000674 	.word	0x08000674

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000674 	.word	0x08000674

080001d4 <GPIO_PeriClockControl>:
#define SRC_GPIO_C_

#include "gpio.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d136      	bne.n	8000254 <GPIO_PeriClockControl+0x80>
    {
        if(pGPIOx == GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a38      	ldr	r2, [pc, #224]	; (80002cc <GPIO_PeriClockControl+0xf8>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d106      	bne.n	80001fc <GPIO_PeriClockControl+0x28>
        {
            GPIOA_PCLK_EN();
 80001ee:	4b38      	ldr	r3, [pc, #224]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f2:	4a37      	ldr	r2, [pc, #220]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6313      	str	r3, [r2, #48]	; 0x30
        else if(pGPIOx == GPIOE)
        {
            GPIOE_PCLK_DI();
        }
    }
}
 80001fa:	e061      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOB)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a35      	ldr	r2, [pc, #212]	; (80002d4 <GPIO_PeriClockControl+0x100>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 8000204:	4b32      	ldr	r3, [pc, #200]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a31      	ldr	r2, [pc, #196]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800020a:	f043 0302 	orr.w	r3, r3, #2
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000210:	e056      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOC)
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a30      	ldr	r2, [pc, #192]	; (80002d8 <GPIO_PeriClockControl+0x104>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 800021a:	4b2d      	ldr	r3, [pc, #180]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800021c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021e:	4a2c      	ldr	r2, [pc, #176]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000220:	f043 0304 	orr.w	r3, r3, #4
 8000224:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000226:	e04b      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOD)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a2c      	ldr	r2, [pc, #176]	; (80002dc <GPIO_PeriClockControl+0x108>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 8000230:	4b27      	ldr	r3, [pc, #156]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a26      	ldr	r2, [pc, #152]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000236:	f043 0308 	orr.w	r3, r3, #8
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023c:	e040      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOE)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a27      	ldr	r2, [pc, #156]	; (80002e0 <GPIO_PeriClockControl+0x10c>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d13c      	bne.n	80002c0 <GPIO_PeriClockControl+0xec>
            GPIOE_PCLK_EN();
 8000246:	4b22      	ldr	r3, [pc, #136]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024a:	4a21      	ldr	r2, [pc, #132]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800024c:	f043 0310 	orr.w	r3, r3, #16
 8000250:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000252:	e035      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        if(pGPIOx == GPIOA)
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a1d      	ldr	r2, [pc, #116]	; (80002cc <GPIO_PeriClockControl+0xf8>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d106      	bne.n	800026a <GPIO_PeriClockControl+0x96>
            GPIOA_PCLK_DI();
 800025c:	4b1c      	ldr	r3, [pc, #112]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a1b      	ldr	r2, [pc, #108]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000262:	f023 0301 	bic.w	r3, r3, #1
 8000266:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000268:	e02a      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOB)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a19      	ldr	r2, [pc, #100]	; (80002d4 <GPIO_PeriClockControl+0x100>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0xac>
            GPIOB_PCLK_DI();
 8000272:	4b17      	ldr	r3, [pc, #92]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000276:	4a16      	ldr	r2, [pc, #88]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 8000278:	f023 0302 	bic.w	r3, r3, #2
 800027c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027e:	e01f      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOC)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a15      	ldr	r2, [pc, #84]	; (80002d8 <GPIO_PeriClockControl+0x104>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0xc2>
            GPIOC_PCLK_DI();
 8000288:	4b11      	ldr	r3, [pc, #68]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a10      	ldr	r2, [pc, #64]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 800028e:	f023 0304 	bic.w	r3, r3, #4
 8000292:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000294:	e014      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOD)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a10      	ldr	r2, [pc, #64]	; (80002dc <GPIO_PeriClockControl+0x108>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0xd8>
            GPIOD_PCLK_DI();
 800029e:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a0b      	ldr	r2, [pc, #44]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002a4:	f023 0308 	bic.w	r3, r3, #8
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002aa:	e009      	b.n	80002c0 <GPIO_PeriClockControl+0xec>
        else if(pGPIOx == GPIOE)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a0c      	ldr	r2, [pc, #48]	; (80002e0 <GPIO_PeriClockControl+0x10c>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d105      	bne.n	80002c0 <GPIO_PeriClockControl+0xec>
            GPIOE_PCLK_DI();
 80002b4:	4b06      	ldr	r3, [pc, #24]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <GPIO_PeriClockControl+0xfc>)
 80002ba:	f023 0310 	bic.w	r3, r3, #16
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	bf00      	nop
 80002c2:	370c      	adds	r7, #12
 80002c4:	46bd      	mov	sp, r7
 80002c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ca:	4770      	bx	lr
 80002cc:	40020000 	.word	0x40020000
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020400 	.word	0x40020400
 80002d8:	40020800 	.word	0x40020800
 80002dc:	40020c00 	.word	0x40020c00
 80002e0:	40021000 	.word	0x40021000

080002e4 <GPIO_Init>:
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b084      	sub	sp, #16
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80002ec:	2300      	movs	r3, #0
 80002ee:	60fb      	str	r3, [r7, #12]
	//1. config mode of gpio pin

	GPIO_PeriClockControl(pGPIOHandle ->pGPIOx, ENABLE);
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	2101      	movs	r1, #1
 80002f6:	4618      	mov	r0, r3
 80002f8:	f7ff ff6c 	bl	80001d4 <GPIO_PeriClockControl>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){ //not interupt mode
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	795b      	ldrb	r3, [r3, #5]
 8000300:	2b03      	cmp	r3, #3
 8000302:	d823      	bhi.n	800034c <GPIO_Init+0x68>
		temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	795b      	ldrb	r3, [r3, #5]
 8000308:	461a      	mov	r2, r3
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	791b      	ldrb	r3, [r3, #4]
 800030e:	005b      	lsls	r3, r3, #1
 8000310:	fa02 f303 	lsl.w	r3, r2, r3
 8000314:	461a      	mov	r2, r3
 8000316:	68fb      	ldr	r3, [r7, #12]
 8000318:	4313      	orrs	r3, r2
 800031a:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	681a      	ldr	r2, [r3, #0]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	4619      	mov	r1, r3
 8000328:	2303      	movs	r3, #3
 800032a:	408b      	lsls	r3, r1
 800032c:	43db      	mvns	r3, r3
 800032e:	4619      	mov	r1, r3
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	400a      	ands	r2, r1
 8000336:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	6819      	ldr	r1, [r3, #0]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	68fa      	ldr	r2, [r7, #12]
 8000344:	430a      	orrs	r2, r1
 8000346:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000348:	2300      	movs	r3, #0
 800034a:	60fb      	str	r3, [r7, #12]
	}
	else{ //interupt mode, code later
	}

	//2. config the speed
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	799b      	ldrb	r3, [r3, #6]
 8000350:	461a      	mov	r2, r3
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	791b      	ldrb	r3, [r3, #4]
 8000356:	005b      	lsls	r3, r3, #1
 8000358:	fa02 f303 	lsl.w	r3, r2, r3
 800035c:	461a      	mov	r2, r3
 800035e:	68fb      	ldr	r3, [r7, #12]
 8000360:	4313      	orrs	r3, r2
 8000362:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	689a      	ldr	r2, [r3, #8]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	791b      	ldrb	r3, [r3, #4]
 800036e:	4619      	mov	r1, r3
 8000370:	2303      	movs	r3, #3
 8000372:	408b      	lsls	r3, r1
 8000374:	43db      	mvns	r3, r3
 8000376:	4619      	mov	r1, r3
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	400a      	ands	r2, r1
 800037e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	6899      	ldr	r1, [r3, #8]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	68fa      	ldr	r2, [r7, #12]
 800038c:	430a      	orrs	r2, r1
 800038e:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000390:	2300      	movs	r3, #0
 8000392:	60fb      	str	r3, [r7, #12]

	//3. config pudp setting
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	79db      	ldrb	r3, [r3, #7]
 8000398:	461a      	mov	r2, r3
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	791b      	ldrb	r3, [r3, #4]
 800039e:	005b      	lsls	r3, r3, #1
 80003a0:	fa02 f303 	lsl.w	r3, r2, r3
 80003a4:	461a      	mov	r2, r3
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	4313      	orrs	r3, r2
 80003aa:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	68da      	ldr	r2, [r3, #12]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	791b      	ldrb	r3, [r3, #4]
 80003b6:	4619      	mov	r1, r3
 80003b8:	2303      	movs	r3, #3
 80003ba:	408b      	lsls	r3, r1
 80003bc:	43db      	mvns	r3, r3
 80003be:	4619      	mov	r1, r3
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	400a      	ands	r2, r1
 80003c6:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	68d9      	ldr	r1, [r3, #12]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	68fa      	ldr	r2, [r7, #12]
 80003d4:	430a      	orrs	r2, r1
 80003d6:	60da      	str	r2, [r3, #12]
	temp = 0;
 80003d8:	2300      	movs	r3, #0
 80003da:	60fb      	str	r3, [r7, #12]

	//4. config outputtype
	temp |= pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	7a1b      	ldrb	r3, [r3, #8]
 80003e0:	461a      	mov	r2, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	791b      	ldrb	r3, [r3, #4]
 80003e6:	005b      	lsls	r3, r3, #1
 80003e8:	fa02 f303 	lsl.w	r3, r2, r3
 80003ec:	461a      	mov	r2, r3
 80003ee:	68fb      	ldr	r3, [r7, #12]
 80003f0:	4313      	orrs	r3, r2
 80003f2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->ODR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	695a      	ldr	r2, [r3, #20]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	4619      	mov	r1, r3
 8000400:	2303      	movs	r3, #3
 8000402:	408b      	lsls	r3, r1
 8000404:	43db      	mvns	r3, r3
 8000406:	4619      	mov	r1, r3
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	400a      	ands	r2, r1
 800040e:	615a      	str	r2, [r3, #20]
	pGPIOHandle->pGPIOx->ODR |= temp;
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6959      	ldr	r1, [r3, #20]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	68fa      	ldr	r2, [r7, #12]
 800041c:	430a      	orrs	r2, r1
 800041e:	615a      	str	r2, [r3, #20]
	temp = 0;
 8000420:	2300      	movs	r3, #0
 8000422:	60fb      	str	r3, [r7, #12]

	//5. config alternate function
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	795b      	ldrb	r3, [r3, #5]
 8000428:	2b02      	cmp	r3, #2
 800042a:	d144      	bne.n	80004b6 <GPIO_Init+0x1d2>
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber < 8){
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	791b      	ldrb	r3, [r3, #4]
 8000430:	2b07      	cmp	r3, #7
 8000432:	d81f      	bhi.n	8000474 <GPIO_Init+0x190>
			pGPIOHandle->pGPIOx->AFR[0] &= ~(0xF << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 4));
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	6a1a      	ldr	r2, [r3, #32]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	791b      	ldrb	r3, [r3, #4]
 800043e:	009b      	lsls	r3, r3, #2
 8000440:	210f      	movs	r1, #15
 8000442:	fa01 f303 	lsl.w	r3, r1, r3
 8000446:	43db      	mvns	r3, r3
 8000448:	4619      	mov	r1, r3
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	400a      	ands	r2, r1
 8000450:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[0] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	6a1a      	ldr	r2, [r3, #32]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	7a5b      	ldrb	r3, [r3, #9]
 800045c:	4619      	mov	r1, r3
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	009b      	lsls	r3, r3, #2
 8000464:	fa01 f303 	lsl.w	r3, r1, r3
 8000468:	4619      	mov	r1, r3
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	430a      	orrs	r2, r1
 8000470:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));

		}
	}

}
 8000472:	e020      	b.n	80004b6 <GPIO_Init+0x1d2>
			pGPIOHandle->pGPIOx->AFR[1]	&= ~(0xF << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8) * 4);
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	3b08      	subs	r3, #8
 8000480:	009b      	lsls	r3, r3, #2
 8000482:	210f      	movs	r1, #15
 8000484:	fa01 f303 	lsl.w	r3, r1, r3
 8000488:	43db      	mvns	r3, r3
 800048a:	4619      	mov	r1, r3
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	400a      	ands	r2, r1
 8000492:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFR[1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8));
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	7a5b      	ldrb	r3, [r3, #9]
 800049e:	4619      	mov	r1, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	3b08      	subs	r3, #8
 80004a6:	009b      	lsls	r3, r3, #2
 80004a8:	fa01 f303 	lsl.w	r3, r1, r3
 80004ac:	4619      	mov	r1, r3
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	430a      	orrs	r2, r1
 80004b4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80004b6:	bf00      	nop
 80004b8:	3710      	adds	r7, #16
 80004ba:	46bd      	mov	sp, r7
 80004bc:	bd80      	pop	{r7, pc}

080004be <GPIO_ReadFromInputPin>:
}

/*
 * Data read and write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80004be:	b480      	push	{r7}
 80004c0:	b085      	sub	sp, #20
 80004c2:	af00      	add	r7, sp, #0
 80004c4:	6078      	str	r0, [r7, #4]
 80004c6:	460b      	mov	r3, r1
 80004c8:	70fb      	strb	r3, [r7, #3]
	uint8_t value = 0;
 80004ca:	2300      	movs	r3, #0
 80004cc:	73fb      	strb	r3, [r7, #15]
	value =(uint8_t)((pGPIOx->IDR >> PinNumber) & 0x1);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	691a      	ldr	r2, [r3, #16]
 80004d2:	78fb      	ldrb	r3, [r7, #3]
 80004d4:	fa22 f303 	lsr.w	r3, r2, r3
 80004d8:	b2db      	uxtb	r3, r3
 80004da:	f003 0301 	and.w	r3, r3, #1
 80004de:	73fb      	strb	r3, [r7, #15]
	return value;
 80004e0:	7bfb      	ldrb	r3, [r7, #15]
}
 80004e2:	4618      	mov	r0, r3
 80004e4:	3714      	adds	r7, #20
 80004e6:	46bd      	mov	sp, r7
 80004e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ec:	4770      	bx	lr

080004ee <GPIO_ToggleOutputPin>:
	}
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80004ee:	b480      	push	{r7}
 80004f0:	b083      	sub	sp, #12
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	6078      	str	r0, [r7, #4]
 80004f6:	460b      	mov	r3, r1
 80004f8:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	695b      	ldr	r3, [r3, #20]
 80004fe:	78fa      	ldrb	r2, [r7, #3]
 8000500:	2101      	movs	r1, #1
 8000502:	fa01 f202 	lsl.w	r2, r1, r2
 8000506:	405a      	eors	r2, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	615a      	str	r2, [r3, #20]
}
 800050c:	bf00      	nop
 800050e:	370c      	adds	r7, #12
 8000510:	46bd      	mov	sp, r7
 8000512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000516:	4770      	bx	lr

08000518 <delay>:
#include <stdint.h>
#include "stm32f401xx.h"
#include "gpio.h"

void delay(void)
{
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
    for(uint32_t i = 0; i < 500000; i++);
 800051e:	2300      	movs	r3, #0
 8000520:	607b      	str	r3, [r7, #4]
 8000522:	e002      	b.n	800052a <delay+0x12>
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	3301      	adds	r3, #1
 8000528:	607b      	str	r3, [r7, #4]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a04      	ldr	r2, [pc, #16]	; (8000540 <delay+0x28>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d9f8      	bls.n	8000524 <delay+0xc>
}
 8000532:	bf00      	nop
 8000534:	bf00      	nop
 8000536:	370c      	adds	r7, #12
 8000538:	46bd      	mov	sp, r7
 800053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053e:	4770      	bx	lr
 8000540:	0007a11f 	.word	0x0007a11f

08000544 <main>:
int main(void)
{
 8000544:	b580      	push	{r7, lr}
 8000546:	b08a      	sub	sp, #40	; 0x28
 8000548:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed1, GpioLed2, GpioButton1;

	// Cấu hình PA5
	GpioLed1.pGPIOx = GPIOA;
 800054a:	4b22      	ldr	r3, [pc, #136]	; (80005d4 <main+0x90>)
 800054c:	61fb      	str	r3, [r7, #28]
	GpioLed1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800054e:	2305      	movs	r3, #5
 8000550:	f887 3020 	strb.w	r3, [r7, #32]
	GpioLed1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000554:	2301      	movs	r3, #1
 8000556:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	GpioLed1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800055a:	2302      	movs	r3, #2
 800055c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	GpioLed1.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000560:	2300      	movs	r3, #0
 8000562:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GpioLed1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000566:	2300      	movs	r3, #0
 8000568:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	GPIO_Init(&GpioLed1);
 800056c:	f107 031c 	add.w	r3, r7, #28
 8000570:	4618      	mov	r0, r3
 8000572:	f7ff feb7 	bl	80002e4 <GPIO_Init>

	// Cấu hình PA6
	GpioLed2.pGPIOx = GPIOA;
 8000576:	4b17      	ldr	r3, [pc, #92]	; (80005d4 <main+0x90>)
 8000578:	613b      	str	r3, [r7, #16]
	GpioLed2.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 800057a:	2306      	movs	r3, #6
 800057c:	753b      	strb	r3, [r7, #20]
	GpioLed2.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800057e:	2301      	movs	r3, #1
 8000580:	757b      	strb	r3, [r7, #21]
	GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000582:	2302      	movs	r3, #2
 8000584:	75bb      	strb	r3, [r7, #22]
	GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000586:	2300      	movs	r3, #0
 8000588:	763b      	strb	r3, [r7, #24]
	GpioLed2.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 800058a:	2300      	movs	r3, #0
 800058c:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(&GpioLed2);
 800058e:	f107 0310 	add.w	r3, r7, #16
 8000592:	4618      	mov	r0, r3
 8000594:	f7ff fea6 	bl	80002e4 <GPIO_Init>

    GpioButton1.pGPIOx = GPIOA;
 8000598:	4b0e      	ldr	r3, [pc, #56]	; (80005d4 <main+0x90>)
 800059a:	607b      	str	r3, [r7, #4]
    GpioButton1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 800059c:	2308      	movs	r3, #8
 800059e:	723b      	strb	r3, [r7, #8]
    GpioButton1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80005a0:	2300      	movs	r3, #0
 80005a2:	727b      	strb	r3, [r7, #9]
	//GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	//GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
    GpioButton1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80005a4:	2301      	movs	r3, #1
 80005a6:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(&GpioButton1);
 80005a8:	1d3b      	adds	r3, r7, #4
 80005aa:	4618      	mov	r0, r3
 80005ac:	f7ff fe9a 	bl	80002e4 <GPIO_Init>

	while(1){

	    if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_8) == 0) {  // Nếu nút được nhấn
 80005b0:	2108      	movs	r1, #8
 80005b2:	4808      	ldr	r0, [pc, #32]	; (80005d4 <main+0x90>)
 80005b4:	f7ff ff83 	bl	80004be <GPIO_ReadFromInputPin>
 80005b8:	4603      	mov	r3, r0
 80005ba:	2b00      	cmp	r3, #0
 80005bc:	d1f8      	bne.n	80005b0 <main+0x6c>
	        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80005be:	2105      	movs	r1, #5
 80005c0:	4804      	ldr	r0, [pc, #16]	; (80005d4 <main+0x90>)
 80005c2:	f7ff ff94 	bl	80004ee <GPIO_ToggleOutputPin>
	        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_6);
 80005c6:	2106      	movs	r1, #6
 80005c8:	4802      	ldr	r0, [pc, #8]	; (80005d4 <main+0x90>)
 80005ca:	f7ff ff90 	bl	80004ee <GPIO_ToggleOutputPin>
	        delay();
 80005ce:	f7ff ffa3 	bl	8000518 <delay>
	    if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_8) == 0) {  // Nếu nút được nhấn
 80005d2:	e7ed      	b.n	80005b0 <main+0x6c>
 80005d4:	40020000 	.word	0x40020000

080005d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d8:	480d      	ldr	r0, [pc, #52]	; (8000610 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005da:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005e0:	480c      	ldr	r0, [pc, #48]	; (8000614 <LoopForever+0x6>)
  ldr r1, =_edata
 80005e2:	490d      	ldr	r1, [pc, #52]	; (8000618 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005e4:	4a0d      	ldr	r2, [pc, #52]	; (800061c <LoopForever+0xe>)
  movs r3, #0
 80005e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e8:	e002      	b.n	80005f0 <LoopCopyDataInit>

080005ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ee:	3304      	adds	r3, #4

080005f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005f4:	d3f9      	bcc.n	80005ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005f6:	4a0a      	ldr	r2, [pc, #40]	; (8000620 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f8:	4c0a      	ldr	r4, [pc, #40]	; (8000624 <LoopForever+0x16>)
  movs r3, #0
 80005fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005fc:	e001      	b.n	8000602 <LoopFillZerobss>

080005fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000600:	3204      	adds	r2, #4

08000602 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000602:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000604:	d3fb      	bcc.n	80005fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000606:	f000 f811 	bl	800062c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800060a:	f7ff ff9b 	bl	8000544 <main>

0800060e <LoopForever>:

LoopForever:
    b LoopForever
 800060e:	e7fe      	b.n	800060e <LoopForever>
  ldr   r0, =_estack
 8000610:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000614:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000618:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800061c:	08000694 	.word	0x08000694
  ldr r2, =_sbss
 8000620:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000624:	2000001c 	.word	0x2000001c

08000628 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000628:	e7fe      	b.n	8000628 <ADC_IRQHandler>
	...

0800062c <__libc_init_array>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	4d0d      	ldr	r5, [pc, #52]	; (8000664 <__libc_init_array+0x38>)
 8000630:	4c0d      	ldr	r4, [pc, #52]	; (8000668 <__libc_init_array+0x3c>)
 8000632:	1b64      	subs	r4, r4, r5
 8000634:	10a4      	asrs	r4, r4, #2
 8000636:	2600      	movs	r6, #0
 8000638:	42a6      	cmp	r6, r4
 800063a:	d109      	bne.n	8000650 <__libc_init_array+0x24>
 800063c:	4d0b      	ldr	r5, [pc, #44]	; (800066c <__libc_init_array+0x40>)
 800063e:	4c0c      	ldr	r4, [pc, #48]	; (8000670 <__libc_init_array+0x44>)
 8000640:	f000 f818 	bl	8000674 <_init>
 8000644:	1b64      	subs	r4, r4, r5
 8000646:	10a4      	asrs	r4, r4, #2
 8000648:	2600      	movs	r6, #0
 800064a:	42a6      	cmp	r6, r4
 800064c:	d105      	bne.n	800065a <__libc_init_array+0x2e>
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f855 3b04 	ldr.w	r3, [r5], #4
 8000654:	4798      	blx	r3
 8000656:	3601      	adds	r6, #1
 8000658:	e7ee      	b.n	8000638 <__libc_init_array+0xc>
 800065a:	f855 3b04 	ldr.w	r3, [r5], #4
 800065e:	4798      	blx	r3
 8000660:	3601      	adds	r6, #1
 8000662:	e7f2      	b.n	800064a <__libc_init_array+0x1e>
 8000664:	0800068c 	.word	0x0800068c
 8000668:	0800068c 	.word	0x0800068c
 800066c:	0800068c 	.word	0x0800068c
 8000670:	08000690 	.word	0x08000690

08000674 <_init>:
 8000674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000676:	bf00      	nop
 8000678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067a:	bc08      	pop	{r3}
 800067c:	469e      	mov	lr, r3
 800067e:	4770      	bx	lr

08000680 <_fini>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	bf00      	nop
 8000684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000686:	bc08      	pop	{r3}
 8000688:	469e      	mov	lr, r3
 800068a:	4770      	bx	lr
